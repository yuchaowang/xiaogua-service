<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaogua.comments.dal.mapper.ThreadsReplyLikeMapper">
  <resultMap id="BaseResultMap" type="com.xiaogua.comments.dal.entity.ThreadsReplyLike">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="comments_code" jdbcType="VARCHAR" property="commentsCode" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, user_code, comments_code, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_threads_reply_like
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_threads_reply_like
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaogua.comments.dal.entity.ThreadsReplyLike">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_threads_reply_like (code, user_code, comments_code, 
      create_date)
    values (#{code,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, #{commentsCode,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaogua.comments.dal.entity.ThreadsReplyLike">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_threads_reply_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="commentsCode != null">
        comments_code,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="commentsCode != null">
        #{commentsCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaogua.comments.dal.entity.ThreadsReplyLike">
    update t_threads_reply_like
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="commentsCode != null">
        comments_code = #{commentsCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaogua.comments.dal.entity.ThreadsReplyLike">
    update t_threads_reply_like
    set code = #{code,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      comments_code = #{commentsCode,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_threads_reply_like
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <sql id="Table_Base_Column_List">
    t_threads_reply_like.id, t_threads_reply_like.code, t_threads_reply_like.user_code, 
    t_threads_reply_like.comments_code, t_threads_reply_like.create_date
  </sql>
</mapper>