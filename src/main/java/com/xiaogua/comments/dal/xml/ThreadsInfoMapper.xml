<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaogua.comments.dal.mapper.ThreadsInfoMapper">
  <resultMap id="BaseResultMap" type="com.xiaogua.comments.dal.entity.ThreadsInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="usert_type" jdbcType="INTEGER" property="usertType" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="is_essence" jdbcType="BIT" property="isEssence" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaogua.comments.dal.entity.ThreadsInfoWithBLOBs">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="content_html" jdbcType="LONGVARCHAR" property="contentHtml" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, user_code, user_name, user_avatar, usert_type, like_num, title, cover, 
    type, is_essence, deleted, create_date
  </sql>
  <sql id="Blob_Column_List">
    content, content_html
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_threads
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_threads
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaogua.comments.dal.entity.ThreadsInfoWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_threads (code, user_code, user_name, 
      user_avatar, usert_type, like_num, 
      title, cover, type, 
      is_essence, deleted, create_date, 
      content, content_html)
    values (#{code,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userAvatar,jdbcType=VARCHAR}, #{usertType,jdbcType=INTEGER}, #{likeNum,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{isEssence,jdbcType=BIT}, #{deleted,jdbcType=BIT}, #{createDate,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{contentHtml,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaogua.comments.dal.entity.ThreadsInfoWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_threads
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="usertType != null">
        usert_type,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="isEssence != null">
        is_essence,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="contentHtml != null">
        content_html,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="usertType != null">
        #{usertType,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="isEssence != null">
        #{isEssence,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contentHtml != null">
        #{contentHtml,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaogua.comments.dal.entity.ThreadsInfoWithBLOBs">
    update t_threads
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="usertType != null">
        usert_type = #{usertType,jdbcType=INTEGER},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="isEssence != null">
        is_essence = #{isEssence,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="contentHtml != null">
        content_html = #{contentHtml,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaogua.comments.dal.entity.ThreadsInfoWithBLOBs">
    update t_threads
    set code = #{code,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      usert_type = #{usertType,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      is_essence = #{isEssence,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      create_date = #{createDate,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      content_html = #{contentHtml,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaogua.comments.dal.entity.ThreadsInfo">
    update t_threads
    set code = #{code,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      usert_type = #{usertType,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      is_essence = #{isEssence,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      create_date = #{createDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByCode" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_threads
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <sql id="Table_Base_Column_List">
    t_threads.id, t_threads.code, t_threads.user_code, t_threads.user_name, t_threads.user_avatar, 
    t_threads.usert_type, t_threads.like_num, t_threads.title, t_threads.cover, t_threads.type, 
    t_threads.is_essence, t_threads.deleted, t_threads.create_date
  </sql>
</mapper>