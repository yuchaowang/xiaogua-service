<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaogua.comments.dal.mapper.UserTypeFileMapper">
  <resultMap id="BaseResultMap" type="com.xiaogua.comments.dal.entity.UserTypeFile">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="file_code" jdbcType="VARCHAR" property="fileCode" />
    <result column="file_detno" jdbcType="INTEGER" property="fileDetno" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_code, type, file_code, file_detno, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_type_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_type_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaogua.comments.dal.entity.UserTypeFile">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_type_file (user_code, type, file_code, 
      file_detno, create_date)
    values (#{userCode,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{fileCode,jdbcType=VARCHAR}, 
      #{fileDetno,jdbcType=INTEGER}, #{createDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaogua.comments.dal.entity.UserTypeFile">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user_type_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userCode != null">
        user_code,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="fileCode != null">
        file_code,
      </if>
      <if test="fileDetno != null">
        file_detno,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="fileCode != null">
        #{fileCode,jdbcType=VARCHAR},
      </if>
      <if test="fileDetno != null">
        #{fileDetno,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaogua.comments.dal.entity.UserTypeFile">
    update t_user_type_file
    <set>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="fileCode != null">
        file_code = #{fileCode,jdbcType=VARCHAR},
      </if>
      <if test="fileDetno != null">
        file_detno = #{fileDetno,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaogua.comments.dal.entity.UserTypeFile">
    update t_user_type_file
    set user_code = #{userCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      file_code = #{fileCode,jdbcType=VARCHAR},
      file_detno = #{fileDetno,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="Table_Base_Column_List">
    t_user_type_file.id, t_user_type_file.user_code, t_user_type_file.type, t_user_type_file.file_code, 
    t_user_type_file.file_detno, t_user_type_file.create_date
  </sql>
</mapper>